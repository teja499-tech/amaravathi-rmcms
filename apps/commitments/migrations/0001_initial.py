# Generated by Django 5.2 on 2025-04-24 02:02

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommitmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Commitment Category',
                'verbose_name_plural': 'Commitment Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='OperationalCommitment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('commitment_type', models.CharField(choices=[('emi', 'EMI'), ('lease', 'Lease'), ('insurance', 'Insurance'), ('maintenance', 'Maintenance Contract'), ('utilities', 'Utilities'), ('rent', 'Rent'), ('other', 'Other')], default='other', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('reference_number', models.CharField(blank=True, help_text='Contract/Policy number', max_length=100, null=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, help_text='Leave blank for indefinite commitments', null=True)),
                ('payment_frequency', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('half_yearly', 'Half Yearly'), ('yearly', 'Yearly'), ('one_time', 'One Time')], default='monthly', max_length=20)),
                ('payment_day', models.PositiveIntegerField(default=1, help_text='Day of the month when payment is due')),
                ('next_payment_date', models.DateField()),
                ('current_payment_is_paid', models.BooleanField(default=False, help_text='Whether the current due payment has been made')),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('terminated', 'Terminated')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('payee_name', models.CharField(help_text='Institution/company to pay', max_length=200)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_phone', models.CharField(blank=True, max_length=15, null=True)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('contract_document_url', models.URLField(blank=True, help_text='URL to the contract document in Supabase', null=True)),
                ('contract_document_path', models.CharField(blank=True, help_text='Path to the document in Supabase', max_length=255, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes, terms and conditions', null=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commitments', to='commitments.commitmentcategory')),
            ],
            options={
                'verbose_name': 'Operational Commitment',
                'verbose_name_plural': 'Operational Commitments',
                'ordering': ['next_payment_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='CommitmentPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField()),
                ('payment_mode', models.CharField(choices=[('CASH', 'Cash'), ('CHEQUE', 'Cheque'), ('BANK', 'Bank Transfer'), ('UPI', 'UPI'), ('AUTO_DEBIT', 'Auto Debit'), ('OTHER', 'Other')], default='BANK', max_length=15)),
                ('reference_number', models.CharField(blank=True, help_text='Transaction ID, Cheque Number, etc.', max_length=100, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('receipt_number', models.CharField(blank=True, max_length=100, null=True)),
                ('receipt_file', models.FileField(blank=True, null=True, upload_to='receipts/commitments/')),
                ('receipt_url', models.URLField(blank=True, help_text='URL to the receipt in Supabase', null=True)),
                ('receipt_file_path', models.CharField(blank=True, help_text='Path to the receipt in Supabase', max_length=255, null=True)),
                ('ledger_entry', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commitment_payment', to='accounts.ledgerentry')),
                ('commitment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='commitments.operationalcommitment')),
            ],
            options={
                'verbose_name': 'Commitment Payment',
                'verbose_name_plural': 'Commitment Payments',
                'ordering': ['-payment_date', '-created_at'],
            },
        ),
    ]
